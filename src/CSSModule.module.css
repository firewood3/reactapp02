/*
    자동으로 고유해질 것이므로 흔히 사용되는 단어를 클래스 이름으로 마음대로 사용 가능
*/
.wrapper {
    background: black;
    padding: 1rem;
    color: white;
    font-size: 2rem;
}

.inverted {
    color: black;
    background: white;
    border: 1px solid black;
}

/* 글로벌 CSS를 작성하고 싶다면 */

:global .something {
    font-weight: 800;
    color: aqua;
}

/*
    # CSS Module
    CSS Module은 CSS를 불러와서 사용할 때 클래스 이름을 고유한 값, 즉
    [파일 이름]_[클래스 이름]_[해시값] 형태로 자동으로 만들어서 컴포넌트 스타일 클래스
    이름이 중첩되는 현상을 방지해 주는 기술이다.

    CSSModule을 사용하기 위해 구버전(v1)의 create-react-app에서는 웹팩에서 css-loader 설정을
    별도로 해 주어야 했지만, v2 버전 이상부터는 따로 설정할 필요 없이 .module.css 확장자로 파일을 저장하기만
    하면 CSS Module이 적용된다.

    CSS Module을 사용하면 클래스 이름을 지을 때 그 고유성에 대해 고민하지 않아도 된다.
    흔히 사용하는 단어로 이름을 짓는다고 해도 전혀 문제가 되지 않는다. 해당 클래스는 우리가 방금 만든 스타일을 직접
    불러온 컴포넌트 내부에서만 작동하기 때문이다.

    만약 특정 클래스가 웹 페이지에서 전역적으로 사용되는 경우라면 :global을 앞에 입력하여 글로벌 CSS 임을 명시해 줄 수 있다.

    CSS Module이 적용된 스타일 파일을 불러오면 객체를 하나 전달받게 되는데 CSS Module에서 사용한 클래스 이름과
    해당 이름을 고유화한 값이 키-값 형태로 들어 있다. 예를들어 위 코드에서 console.log(styles)를 한다면 다음과 같은 결과가 나타난다.
    { wrapper: "CSSModule_wrapper__2rK3W" }

    이 고유한 클래스 이름을 사용하려면 클래스를 적용하고 싶은 JSX 엘리먼트에 className = {styles.[클래스 이름]} 형태로 전달해
    주면 된다. :global을 사용하여 전역적으로 선언한 클래스의 경우 평상시 해왔던 것처럼 그냥 문자열로 넣어 주면 된다.

    ## className에 적용하기
    <div className={styles.wrapper}>
    <div className={ `${styles.wrapper} ${styles.inverted} `}>
    <div className={ [styles.wrapper, styles.inverted].join(' ')}>
        안녕하세요, 저는 <span className={"something"}>CSS Module!</span>
    </div>
 */
